events {
    worker_connections 1024;
}

http {
    upstream backend {
        # Blue environment (default)
        server api-gateway-blue:8000 weight=100;
        # Green environment (for rolling deployments)
        # server api-gateway-green:8000 weight=0;
    }
    
    # Health check endpoint for switching traffic
    upstream health_check {
        server api-gateway-blue:8000;
        server api-gateway-green:8000 backup;
    }
    
    server {
        listen 80;
        
        # Health check endpoint
        location /health-check {
            proxy_pass http://health_check/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        
        # Main application traffic
        location / {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Health check for backend selection
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }
        
        # Static files and media
        location /storage/ {
            alias /app/storage/;
            expires 1h;
            add_header Cache-Control "public, immutable";
        }
    }
    
    # Admin interface for traffic switching
    server {
        listen 8081;
        
        location /switch-to-green {
            return 200 "Switch to green: Update upstream weights manually";
            add_header Content-Type text/plain;
        }
        
        location /switch-to-blue {
            return 200 "Switch to blue: Update upstream weights manually";
            add_header Content-Type text/plain;
        }
        
        location /status {
            return 200 "Current: Blue environment active";
            add_header Content-Type text/plain;
        }
    }
}